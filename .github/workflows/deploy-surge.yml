name: Deploy to Surge

on:
  push:
    branches:
      - main
    tags:
      - '*'
      - '**'
    paths:
      - '.github/workflows/deploy.yml'
  #  pull_request: #FIXME: remove after testing
  #    branches: [ "main" ]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: surge

    env:
      domain: taskmon.surge.sh

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Get npm cache
        id: npm-cache
        run: echo "NPM_CACHE_DIR=$(pwd)/node_modules" >> "${GITHUB_OUTPUT}"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.NPM_CACHE_DIR }}
          key:
            npm-${{github.workflow}}-${{ runner.os }}-${{
            hashFiles('**package.json') }}
          restore-keys: |
            npm-${{github.workflow}}-${{ runner.os }}-${{ hashFiles('**package.json') }}

      - name: Install dependencies
        run: npm install --include=dev

      - name: Build
        run: npm run build

      - name: Extract Domain
        id: extract_domain
        run: |
          ref=$(git rev-parse --abbrev-ref HEAD)
          sref=${ref//\//-}
          echo "preview_domain=$sref-${env.domain}" >> $GITHUB_OUTPUT

      - name: Preview to ${{ steps.extract_domain.outputs.preview_domain }}
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: ${{ steps.extract_domain.outputs.preview_domain }}
          project: './build'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}

      - name: Deploy to ${env.domain}
        if:
          ${{ startsWith(github.ref, 'refs/tags/') || github.ref ==
          'refs/heads/main' }}
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: ${env.domain}
          project: './build'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
